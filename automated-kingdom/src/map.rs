use ak_server::types_game::Texture;
use derive_new::new;
use macroquad::prelude::{is_mouse_button_down, uvec2, vec2, MouseButton, UVec2, Vec2, RED, WHITE};
use macroquad::texture::{draw_texture, DrawTextureParams};
use macroquad::window::{screen_height, screen_width};

use crate::conf::SQUARE_SIZE;
use crate::game::game;
use crate::geometry::CollisionRect;
use crate::objects::player::bottom_ui_height;
use crate::objects::worker::workers_iter;
use crate::texture_map::TextureMap;
use crate::util::{draw_rel_rectangle, draw_rel_texture_ex, mouse_pos, screen_mouse_pos};
use crate::{hex, ternary};

#[derive(PartialEq, Eq, Clone, Copy, Debug)]
pub enum Tile {
    Wall,
    Air,
}

#[derive(Clone, PartialEq, Debug, new)]
pub struct Map {
    #[new(value = "string_to_map(TEST_MAP).0")]
    pub map: Vec<Vec<Tile>>,

    #[new(value = "string_to_map(TEST_MAP).1")]
    pub width: usize,

    #[new(value = "string_to_map(TEST_MAP).2")]
    pub height: usize,
}
impl Map {
    pub fn get(&self, pos: UVec2) -> Tile {
        self.map[pos.y as usize][pos.x as usize]
    }

    pub fn draw(&self) {
        for (y, row) in self.map.iter().enumerate() {
            for (x, tile) in row.iter().enumerate() {
                let world_pos = pos_to_world(uvec2(x as u32, y as u32));
                match tile {
                    Tile::Wall => {
                        draw_texture(Texture::Wall.texture(), world_pos.x, world_pos.y, WHITE);
                    }
                    Tile::Air => {}
                }
            }
        }
    }

    pub fn draw_minimap(&self) {
        let divisor = 20.0;
        let new_square_size = SQUARE_SIZE / divisor;
        let margin = 8.0;

        /* --------------------------------- Drawing -------------------------------- */
        // Border / background
        let width = self.width as f32 * new_square_size;
        let height = self.height as f32 * new_square_size;

        let border_width = 2.0;

        draw_rel_rectangle(
            border_width,
            border_width,
            width + margin * 2.0 - border_width,
            height + margin * 2.0 - border_width,
            hex!("#DCB579"),
        );
        let border_rect = CollisionRect::new_rel(
            border_width,
            border_width,
            width + margin * 2.0 - border_width,
            height + margin * 2.0 - border_width,
        );
        border_rect.draw_lines(2.5, hex!("#A0793D"));

        /* ----------------------------------- Map ---------------------------------- */
        for (y, row) in self.map.iter().enumerate() {
            for (x, tile) in row.iter().enumerate() {
                match tile {
                    Tile::Wall => {
                        draw_rel_texture_ex(
                            Texture::Wall.texture(),
                            margin + x as f32 * new_square_size,
                            margin + y as f32 * new_square_size,
                            DrawTextureParams {
                                dest_size: Some(vec2(new_square_size, new_square_size)),
                                ..Default::default()
                            },
                        );
                    }
                    Tile::Air => {}
                }
            }
        }

        /* ----------------------------- View indicator ----------------------------- */
        let cam_center = game().camera.camera.target;
        let cam_view = vec2(screen_width(), screen_height()) / game().camera.zoom;
        let cam_rect = CollisionRect::new_rel(
            margin + (cam_center.x - cam_view.x / 2.0) / divisor,
            margin + (cam_center.y - cam_view.y / 2.0) / divisor,
            cam_view.x / divisor,
            (cam_view.y - bottom_ui_height()) / divisor,
        );

        cam_rect.draw_lines(2.0, RED);

        /* --------------------------------- Workers -------------------------------- */
        for worker in workers_iter() {
            let p_color = game().main_player().color;
            let color = ternary!(worker.color == p_color, hex!("#00FF00"), hex!("#FF0000"));

            let center = worker.rect.center();
            let rect = CollisionRect::new_rel_center(center / divisor + margin, 4.0, 4.0);

            if worker.color != p_color && !cam_rect.touches_point(&rect.center()) {
                continue;
            }

            rect.draw(color);
        }

        /* -------------------------------- Movement -------------------------------- */
        if border_rect.touches_point(&screen_mouse_pos()) && is_mouse_button_down(MouseButton::Left)
        {
            let new_cam_pos = (mouse_pos() - margin) * divisor;
            game().camera.camera.target = new_cam_pos;
        }
    }

    pub fn set_camera_bounds(&self) {
        game().camera.bounds = Some(vec2(
            self.width as f32 * SQUARE_SIZE,
            self.height as f32 * SQUARE_SIZE,
        ));
    }
}

/// Inverse of [world_to_pos]. Converts a location on a [Map] to a world position
pub fn pos_to_world(pos: UVec2) -> Vec2 {
    vec2(pos.x as f32 * SQUARE_SIZE, pos.y as f32 * SQUARE_SIZE)
}

/// Inverse of [pos_to_world], converts a world position to a location on a [Map]
pub fn world_to_pos(pos: Vec2) -> UVec2 {
    uvec2((pos.x / SQUARE_SIZE) as u32, (pos.y / SQUARE_SIZE) as u32)
}

fn string_to_map(string: &'static str) -> (Vec<Vec<Tile>>, usize, usize) {
    let mut map = vec![];
    for line in string.lines() {
        let mut row = vec![];
        for c in line.chars() {
            match c {
                '#' => row.push(Tile::Wall),
                '.' => row.push(Tile::Air),
                _ => panic!("Invalid character in map string '{}'", c),
            }
        }
        map.push(row);
    }
    let width = map[0].len();
    let height = map.len();
    (map, width, height)
}

const TEST_MAP: &str = "######################################################################################################################################################
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
#....................................................................................................................................................#
######################################################################################################################################################";
